/*
 * Analyzer and HUB API
 * The definition of the software interface between analyzers and the HUB.  The interface will be implemented as a RESTful interface with all server endpoints hosted on the Analyzer.  The following requirements will be met by all interfaces:  1. All data passed back from server shall be in JSON format. 2. All query parameters and JSON data properties shall be named using snake case and be all lower case. 4. All data types that describe a measurement value shall end with an underscore followed by the unit of that physical value.  i.e. motor_current_ma.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.openapitools.client.model.MeasurementStatus;

/**
 * InlineResponse200
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T10:02:09.757-04:00[America/Nassau]")
public class InlineResponse200 {
  public static final String SERIALIZED_NAME_MEASUREMENT_ID = "measurement_id";
  @SerializedName(SERIALIZED_NAME_MEASUREMENT_ID)
  private String measurementId;

  public static final String SERIALIZED_NAME_ELAPSED_TIME_MSEC = "elapsed_time_msec";
  @SerializedName(SERIALIZED_NAME_ELAPSED_TIME_MSEC)
  private BigDecimal elapsedTimeMsec;

  public static final String SERIALIZED_NAME_MEASUREMENT_STATUS = "measurement_status";
  @SerializedName(SERIALIZED_NAME_MEASUREMENT_STATUS)
  private MeasurementStatus measurementStatus;

  public static final String SERIALIZED_NAME_STATUS_DETAIL = "status_detail";
  @SerializedName(SERIALIZED_NAME_STATUS_DETAIL)
  private String statusDetail;


  public InlineResponse200 measurementId(String measurementId) {
    
    this.measurementId = measurementId;
    return this;
  }

   /**
   * The ID value for a measurement
   * @return measurementId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID value for a measurement")

  public String getMeasurementId() {
    return measurementId;
  }


  public void setMeasurementId(String measurementId) {
    this.measurementId = measurementId;
  }


  public InlineResponse200 elapsedTimeMsec(BigDecimal elapsedTimeMsec) {
    
    this.elapsedTimeMsec = elapsedTimeMsec;
    return this;
  }

   /**
   * The time the operation has taken so far
   * minimum: 0
   * @return elapsedTimeMsec
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The time the operation has taken so far")

  public BigDecimal getElapsedTimeMsec() {
    return elapsedTimeMsec;
  }


  public void setElapsedTimeMsec(BigDecimal elapsedTimeMsec) {
    this.elapsedTimeMsec = elapsedTimeMsec;
  }


  public InlineResponse200 measurementStatus(MeasurementStatus measurementStatus) {
    
    this.measurementStatus = measurementStatus;
    return this;
  }

   /**
   * Get measurementStatus
   * @return measurementStatus
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public MeasurementStatus getMeasurementStatus() {
    return measurementStatus;
  }


  public void setMeasurementStatus(MeasurementStatus measurementStatus) {
    this.measurementStatus = measurementStatus;
  }


  public InlineResponse200 statusDetail(String statusDetail) {
    
    this.statusDetail = statusDetail;
    return this;
  }

   /**
   * Additional information in plain text that describes the value status of the analyzer.  If no additional detail is available or necessary, this will be an empty string
   * @return statusDetail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Additional information in plain text that describes the value status of the analyzer.  If no additional detail is available or necessary, this will be an empty string")

  public String getStatusDetail() {
    return statusDetail;
  }


  public void setStatusDetail(String statusDetail) {
    this.statusDetail = statusDetail;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200 inlineResponse200 = (InlineResponse200) o;
    return Objects.equals(this.measurementId, inlineResponse200.measurementId) &&
        Objects.equals(this.elapsedTimeMsec, inlineResponse200.elapsedTimeMsec) &&
        Objects.equals(this.measurementStatus, inlineResponse200.measurementStatus) &&
        Objects.equals(this.statusDetail, inlineResponse200.statusDetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(measurementId, elapsedTimeMsec, measurementStatus, statusDetail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200 {\n");
    sb.append("    measurementId: ").append(toIndentedString(measurementId)).append("\n");
    sb.append("    elapsedTimeMsec: ").append(toIndentedString(elapsedTimeMsec)).append("\n");
    sb.append("    measurementStatus: ").append(toIndentedString(measurementStatus)).append("\n");
    sb.append("    statusDetail: ").append(toIndentedString(statusDetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

