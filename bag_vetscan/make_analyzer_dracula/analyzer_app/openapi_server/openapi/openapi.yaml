openapi: 3.0.1
info:
  description: "The definition of the software interface between analyzers and the\
    \ HUB.  The interface will be implemented as a RESTful interface with all server\
    \ endpoints hosted on the Analyzer.\n\nThe following requirements will be met\
    \ by all interfaces: \n1. All data passed back from server shall be in JSON format.\n\
    2. All query parameters and JSON data properties shall be named using snake case\
    \ and be all lower case.\n4. All data types that describe a measurement value\
    \ shall end with an underscore followed by the unit of that physical value.  i.e.\
    \ motor_current_ma."
  title: Analyzer and HUB API
  version: "1.0"
servers:
- url: /
paths:
  /configuration:
    get:
      description: Request the configuration from the analyzer
      operationId: configuration_get
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Analyzer responds with the its configuration information
      tags:
      - Configuration
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
    put:
      description: Set the configuration of the analyzer
      operationId: configuration_put
      requestBody:
        content:
          application/json:
            schema:
              description: An object containing the full configuration for the analyzer
              type: object
        required: true
        x-body-name: body
      responses:
        "200":
          description: Analyzer successfully made configuration changes requested
            by the client
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
      tags:
      - Configuration
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
      x-codegen-request-body-name: body
  /configuration/factory_reset:
    put:
      description: Restore the analyzer to the state it was in when it left the factory.
        All settings and data are removed.
      operationId: configuration_factory_reset_put
      responses:
        "200":
          description: Analyzer successfully began a factory reset
      tags:
      - Configuration
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
  /configuration/schema:
    get:
      description: Request the configuration schema from the analyzer
      operationId: configuration_schema_get
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Analyzer responds with the configuration schema that is used
            to validate the configuration
        "501":
          description: The analyzer does not provide a schema for the configuration
      tags:
      - Configuration
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
  /control/light/blink:
    put:
      description: Cause an analyzer to blink its light ring.  The purpose of this
        is to identify an analyzer. If you have multiple analyzers of the same kind
        it is nice to have a way to get a visual que which is which instead of having
        to read the serial number of each analyzer to identify it.
      operationId: control_light_blink_put
      responses:
        "200":
          description: Analyzer was successful blinking the light ring
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Control Channel
      x-openapi-router-controller: openapi_server.controllers.control_channel_controller
  /control/light/off:
    put:
      description: Cause an analyzer to turn off its light ring.
      operationId: control_light_off_put
      responses:
        "200":
          description: Analyzer was successful the light ring is off as requested
            by the HUB
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request to a server endpoint that
            is not defined
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request sent to a valid location
            but with an method that is not supported
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request whose subsequent server
            response violates the predefined response schema
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Control Channel
      x-openapi-router-controller: openapi_server.controllers.control_channel_controller
  /control/power/off:
    put:
      description: Go from a state of powered to no power. This behavior of this action
        will depend on what a particular analyzer supports. If it doesn't support
        power off, go to 'deep sleep' mode
      operationId: control_power_off_put
      responses:
        "200":
          description: Analyzer successfully began to power off or go to sleep
      tags:
      - Control Channel
      x-openapi-router-controller: openapi_server.controllers.control_channel_controller
  /control/power/reboot:
    put:
      description: Request sent from a client to reboot the analyzer (power off and
        power back on), leaving all settings and data intact
      operationId: control_power_reboot_put
      responses:
        "200":
          description: Analyzer successfully initiated a reboot
      tags:
      - Control Channel
      x-openapi-router-controller: openapi_server.controllers.control_channel_controller
  /measurement/cancel:
    delete:
      description: The HUB is requesting the analyzer cancel the measurement that
        is currently being performed
      operationId: measurement_cancel_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: This response is sent to notify the HUB of the status of a
            measurement that was requested to start, cancel, or whose status is being
            queried
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request to a server endpoint that
            is not defined
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request sent to a valid location
            but with an method that is not supported
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request whose subsequent server
            response violates the predefined response schema
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Measurement Channel
      x-openapi-router-controller: openapi_server.controllers.measurement_channel_controller
  /measurement/consumable/{consumable_uuid}:
    post:
      description: Start an analyzer measurement with a specific consumable
      operationId: measurement_consumable_consumable_uuid_post
      parameters:
      - description: The UUID of the consumable
        explode: false
        in: path
        name: consumable_uuid
        required: true
        schema:
          format: UUID
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: This response is sent to notify the HUB of the status of a
            measurement that was requested to start, cancel, or whose status is being
            queried
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request to a server endpoint that
            is not defined
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request sent to a valid location
            but with an method that is not supported
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request whose subsequent server
            response violates the predefined response schema
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Measurement Channel
      x-openapi-router-controller: openapi_server.controllers.measurement_channel_controller
  /measurement/file:
    post:
      description: Start an analyzer measurement script as described in a file stored
        on the analyzer.  This is intended for R&D use only and should not be used
        during normal operation
      operationId: measurement_file_post
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                filename:
                  description: This string will the full path to the file that stores
                    the measurement script as it is stored on the analyzer
                  type: string
              required:
              - filename
              type: object
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: This response is sent to notify the HUB of the status of a
            measurement that was requested to start, cancel, or whose status is being
            queried
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request to a server endpoint that
            is not defined
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request sent to a valid location
            but with an method that is not supported
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request whose subsequent server
            response violates the predefined response schema
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Measurement Channel
      x-openapi-router-controller: openapi_server.controllers.measurement_channel_controller
      x-codegen-request-body-name: body
  /measurement/past_results:
    get:
      description: The HUB is requesting the analyzer send past results between two
        times
      operationId: measurement_past_results_get
      parameters:
      - description: The time to start looking for results to return
        explode: true
        in: query
        name: start_time
        required: true
        schema:
          description: HH:MM:SS
          example: 23:13:01
          type: string
        style: form
      - description: The date to start looking for results to return
        explode: true
        in: query
        name: start_date
        required: true
        schema:
          description: YYYY-MM-DD
          example: 2021-05-13
          type: string
        style: form
      - description: The time to stop looking for results to return
        explode: true
        in: query
        name: end_time
        required: true
        schema:
          description: HH:MM:SS
          example: 06:05:23
          type: string
        style: form
      - description: The date to stop looking for results to return
        explode: true
        in: query
        name: end_date
        required: true
        schema:
          description: YYYY-MM-DD
          example: 2021-05-15
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Analyzer is responding with the results of all measurements
            taken between the times in the request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request to a server endpoint that
            is not defined
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request sent to a valid location
            but with an method that is not supported
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request whose subsequent server
            response violates the predefined response schema
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Measurement Channel
      x-openapi-router-controller: openapi_server.controllers.measurement_channel_controller
  /measurement/result:
    get:
      description: The HUB requests that the analyzer return the result of the most
        recent measurement performed
      operationId: measurement_result_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/measurement_result'
          description: The analyzer is sending the HUB the results of the most recent
            measurement performed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request to a server endpoint that
            is not defined
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request sent to a valid location
            but with an method that is not supported
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request whose subsequent server
            response violates the predefined response schema
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Measurement Channel
      x-openapi-router-controller: openapi_server.controllers.measurement_channel_controller
  /measurement/script:
    post:
      description: Start an analyzer measurement script sent as a string.  This is
        intended for R&D use only and should not be used during normal operation
      operationId: measurement_script_post
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                script:
                  description: This string will contain a script that the analyzer
                    will consume and begin the execution of
                  type: string
              required:
              - script
              type: object
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: This response is sent to notify the HUB of the status of a
            measurement that was requested to start, cancel, or whose status is being
            queried
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request to a server endpoint that
            is not defined
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request sent to a valid location
            but with an method that is not supported
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request whose subsequent server
            response violates the predefined response schema
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Measurement Channel
      x-openapi-router-controller: openapi_server.controllers.measurement_channel_controller
      x-codegen-request-body-name: body
  /measurement/status:
    get:
      description: The HUB is requesting the analyzer return the status of the current
        measurement being performed
      operationId: channel_measurement_get_measurement_status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: This response is sent to notify the HUB of the status of a
            measurement that was requested to start, cancel, or whose status is being
            queried
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request to a server endpoint that
            is not defined
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request whose subsequent server
            response violates the predefined response schema
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Measurement Channel
      x-openapi-router-controller: openapi_server.controllers.measurement_channel_controller
  /measurement/supported_consumables:
    get:
      description: Return a list of all consumable types the analyzer supports. Each
        consumable returned will include a universally unique identifier, which will
        be used by the IC when starting a measurement. Any information required to
        run a consumable will be described in the response using the JSON Schema format
        (https://json-schema.org/).
      operationId: measurement_supported_consumables_get
      responses:
        "200":
          content:
            application/json:
              example:
                consumables:
                - name: Coagulation (PT/aPTT) (Coag Combo)
                  uuid: 0b7ec890-3960-11eb-a081-2790e47ff2f4
                  type: cartridge
                  species:
                  - '*'
                  duration: PT7M
                  assays:
                  - PT
                  - aPTT
                  schema: {}
                - name: Feline bloodtyping
                  uuid: 5ed688be-4376-11eb-8136-3345982818db
                  type: cartridge
                  species:
                  - Feline
                  duration: PT5M
                  assays:
                  - ""
                  schema: {}
              schema:
                properties:
                  consumables:
                    items:
                      additionalProperties: false
                      properties:
                        name:
                          type: string
                        uuid:
                          format: uuid
                          type: string
                        type:
                          type: string
                        species:
                          items:
                            type: string
                          type: array
                        duration:
                          format: duration
                          type: string
                        assays:
                          items:
                            type: string
                          type: array
                        schema:
                          type: object
                      type: object
                    type: array
          description: Analyzer is responding to the client with a detailed list of
            all supported consumables.
      tags:
      - Measurement Channel
      x-openapi-router-controller: openapi_server.controllers.measurement_channel_controller
  /status/currently_activated_events:
    get:
      description: The HUB is requesting the analyzer respond with a list of all currently
        activated events
      operationId: status_currently_activated_events_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: Analyzer is responding with a list of all currently activated
            events
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request to a server endpoint that
            is not defined
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request sent to a valid location
            but with an method that is not supported
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request whose subsequent server
            response violates the predefined response schema
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Status Channel
      x-openapi-router-controller: openapi_server.controllers.status_channel_controller
  /status/operational:
    get:
      description: The HUB can use send this message to get the status of an analyzer
      operationId: status_operational_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: Analyzer is responding with its status
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request that violates the predefined
            request schema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to a request to a server endpoint that
            is not defined
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request sent to a valid location
            but with an method that is not supported
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request whose subsequent server
            response violates the predefined response schema
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: This response is sent to any request that the analyzer is unable
            to do at the time
      tags:
      - Status Channel
      x-openapi-router-controller: openapi_server.controllers.status_channel_controller
components:
  headers: {}
  parameters:
    start_time:
      description: The time to start looking for results to return
      explode: true
      in: query
      name: start_time
      required: true
      schema:
        description: HH:MM:SS
        example: 23:13:01
        type: string
      style: form
    start_date:
      description: The date to start looking for results to return
      explode: true
      in: query
      name: start_date
      required: true
      schema:
        description: YYYY-MM-DD
        example: 2021-05-13
        type: string
      style: form
    end_time:
      description: The time to stop looking for results to return
      explode: true
      in: query
      name: end_time
      required: true
      schema:
        description: HH:MM:SS
        example: 06:05:23
        type: string
      style: form
    end_date:
      description: The date to stop looking for results to return
      explode: true
      in: query
      name: end_date
      required: true
      schema:
        description: YYYY-MM-DD
        example: 2021-05-15
        type: string
      style: form
  requestBodies:
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
      required: true
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  responses:
    measurement_status:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200'
      description: This response is sent to notify the HUB of the status of a measurement
        that was requested to start, cancel, or whose status is being queried
    "400_bad_request":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
      description: This response is sent to a request that violates the predefined
        request schema
    "404_bad_request":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
      description: This response is sent to a request to a server endpoint that is
        not defined
    "405_method_not_allowed":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
      description: This response is sent to any request sent to a valid location but
        with an method that is not supported
    "500_bad_request":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
      description: This response is sent to any request whose subsequent server response
        violates the predefined response schema
    "503_service_unavailable":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
      description: This response is sent to any request that the analyzer is unable
        to do at the time
  schemas:
    analyzer_id:
      description: The ID of the analyzer
      type: string
    analyzer_type:
      description: 'The type of analyzer '
      enum:
      - SPE
      - LTF
      - MOL
      type: string
    analyzer_serial_number:
      description: The serial number of the analyzer
      type: string
    analyzer_software_version:
      description: The version of the software that is currently running on the analyzer
      type: string
    analyzer_firmware_version:
      description: The version of the firmware that is currently running on the analyzer
      type: string
    analyzer_hardware_version:
      description: The version of the hardware the the analyzer consists of
      type: string
    error_detail:
      description: A description of the problem with the request
      title: detail
      type: string
    error_status:
      description: The number of the HTTP error code
      title: status
      type: number
    error_title:
      description: The title of the error indicated by the status
      title: title
      type: string
    error_type:
      description: Additional error information if available describing the type of
        error
      title: type
      type: string
    consumable_name:
      description: A descriptive name of the consumable that can be used to uniquely
        identify it
      title: consumable_name
      type: string
    measurement_result:
      description: This object will contain results of the most recent measurement
      example:
        result: Failed
        consumable_name: consumable_name
        start_date_and_time: 05-05-2021 22:07:04
        end_date_and_time: 05-05-2021 22:07:55
        test_results: '{}'
        duration_sec: 800.7481076419654
      properties:
        consumable_name:
          description: A descriptive name of the consumable that can be used to uniquely
            identify it
          title: consumable_name
          type: string
        start_date_and_time:
          description: The local date and time the measurement was started in format
            MM-DD-YYYY HH:MM:SS
          example: 05-05-2021 22:07:04
          title: start_date_and_time
          type: string
        end_date_and_time:
          description: The local date and time the measurement ended in format MM-DD-YYYY
            HH:MM:SS
          example: 05-05-2021 22:07:55
          title: end_date_and_time
          type: string
        duration_sec:
          description: The number of seconds the measurement took from start to end
          maximum: 9999
          minimum: 0
          title: duration_sec
          type: number
        result:
          description: The overall result of the measurement
          enum:
          - Failed
          - Cancelled
          - Completed
          title: result
          type: string
        test_results:
          description: The test results.  Will need to flush this out as we go on
            as to what this looks like
          title: test_results
          type: object
      title: measurement_result
      type: object
    measurement_id:
      description: The ID value for a measurement
      title: measurement_id
      type: string
    elapsed_time_msec:
      description: The time the operation has taken so far
      minimum: 0
      title: elapsed_time_msec
      type: number
    measurement_status:
      description: The status of the measurement
      enum:
      - Initializing
      - Running
      - Aborted
      - Stopping
      - Complete
      title: measurement_status
      type: string
    status_detail:
      description: Additional information in plain text that describes the value status
        of the analyzer.  If no additional detail is available or necessary, this
        will be an empty string
      title: status_detail
      type: string
    event_info:
      description: This object will contain information about an event that occurred
      example:
        severity: Notification
        event_name: event_name
        activation_time: 05-05-2021 22:07:04
        event_additional_information: event_additional_information
      properties:
        activation_time:
          description: The local date and time the event was activated in format MM-DD-YYYY
            HH:MM:SS
          example: 05-05-2021 22:07:04
          title: activation_time
          type: string
        severity:
          description: A string value indicating the severity of the event
          enum:
          - Notification
          - Warning
          - Error
          - Halt
          title: severity
          type: string
        event_name:
          description: The name of the event
          title: event_name
          type: string
        event_additional_information:
          description: Additional information to describe the event that has occurred.  This
            can be anything that will help the operator understand in more detail
            the event
          title: event_additional_information
          type: string
      title: event_info
      type: object
    inline_response_400:
      properties:
        detail:
          description: A description of the problem with the request
          title: detail
          type: string
        status:
          description: The number of the HTTP error code
          title: status
          type: number
        title:
          description: The title of the error indicated by the status
          title: title
          type: string
        type:
          description: Additional error information if available describing the type
            of error
          title: type
          type: string
      required:
      - detail
      - status
      - title
      - type
      title: inline_response_400
      type: object
    inline_object:
      properties:
        script:
          description: This string will contain a script that the analyzer will consume
            and begin the execution of
          type: string
      required:
      - script
      type: object
    inline_response_200:
      example:
        measurement_id: measurement_id
        elapsed_time_msec: 0.08008281904610115
        status_detail: status_detail
      properties:
        measurement_id:
          description: The ID value for a measurement
          title: measurement_id
          type: string
        elapsed_time_msec:
          description: The time the operation has taken so far
          minimum: 0
          title: elapsed_time_msec
          type: number
        measurement_status:
          $ref: '#/components/schemas/measurement_status'
        status_detail:
          description: Additional information in plain text that describes the value
            status of the analyzer.  If no additional detail is available or necessary,
            this will be an empty string
          title: status_detail
          type: string
      required:
      - elapsed_time_msec
      - measurement_id
      - measurement_status
      - status_detail
      title: inline_response_200
      type: object
    inline_object_1:
      properties:
        filename:
          description: This string will the full path to the file that stores the
            measurement script as it is stored on the analyzer
          type: string
      required:
      - filename
      type: object
    inline_response_200_1:
      example:
        measurement_results:
        - result: Failed
          consumable_name: consumable_name
          start_date_and_time: 05-05-2021 22:07:04
          end_date_and_time: 05-05-2021 22:07:55
          test_results: '{}'
          duration_sec: 800.7481076419654
        - result: Failed
          consumable_name: consumable_name
          start_date_and_time: 05-05-2021 22:07:04
          end_date_and_time: 05-05-2021 22:07:55
          test_results: '{}'
          duration_sec: 800.7481076419654
      properties:
        measurement_results:
          description: An array of measurement result objects that were taken in between
            the times sent in the request.  If there are no historical results to
            report, this will return as an empty array
          items:
            $ref: '#/components/schemas/measurement_result'
          title: measurement_results
          type: array
      required:
      - measurement_results
      title: inline_response_200_1
      type: object
    inline_response_200_2:
      example:
        status: NotReady
      properties:
        status:
          description: The status of the analyzer
          enum:
          - NotReady
          - Ready
          - Analyzing
          - UserActionNeeded
          - Advisory
          - TestComplete
          title: status
          type: string
      required:
      - status
      title: inline_response_200_2
      type: object
    inline_response_200_3:
      example:
        currently_activated_events:
        - severity: Notification
          event_name: event_name
          activation_time: 05-05-2021 22:07:04
          event_additional_information: event_additional_information
        - severity: Notification
          event_name: event_name
          activation_time: 05-05-2021 22:07:04
          event_additional_information: event_additional_information
      properties:
        currently_activated_events:
          description: An array of all events that are currently activated
          items:
            $ref: '#/components/schemas/event_info'
          title: currently_activated_events
          type: array
      required:
      - currently_activated_events
      title: inline_response_200_3
      type: object
